##################### OpenTSDB API Connection Defaults ########################
[opentsdb_plugin]
# Port number the bridge listening on for Grafana data requests over
# OpentTSDB plugin
# 
# 4242 - for HTTP connections 
# 8443 - for HTTPS connections 
# (Default: 4242)
# port = 4242

# The IP address of network interface on which the OpenTSDB Api should listen
# for connections.
# The string '0.0.0.0' is a special IPv4 entry meaning "any active interface"
# (INADDR_ANY), and '::' is the similar IN6ADDR_ANY for IPv6.
# The empty string or None are not allowed.
opentsdbBindIp = 0.0.0.0

##################### Prometheus Exporter API Connection Defaults #############
[prometheues_exporter_plugin]
# Port number the bridge listening on for Prometheus server requests;
# prometheus = 9250

# The IP address of network interface on which the Prometheus Api should listen 
# for connections.
# The string '0.0.0.0' is a special IPv4 entry meaning "any active interface"
# (INADDR_ANY), and '::' is the similar IN6ADDR_ANY for IPv6.
# The empty string or None are not allowed.
promBindIp = 0.0.0.0

# By default, the original values from the platform will be exported alongside 
# the timestamps at which they were measured. This can slow down a ZIMON query
# performance.
# Set rawCounters to False to accelerate query execution time. Keep in mind that 
# in this case the exposed timestamps will represent the time at which the values
# were added to a bucket.
# Sensors including  'increasing counters' metric types will still run in 
# rawCounters mode.
rawCounters = True

##################### API Protocol scheme #####################################
[connection]
# Protocol (http, https)
protocol = http

##################### API Basic Authentication ################################
[basic_auth]
# Basic authentication is enabled by default.
# It is recommended to leave Basic Authentication enabled, especially when 
# connecting via HTTP. The bridge will validate the username and password 
# from `Authorization` header of every incoming http request.
enabled = True

# user name used for bridge api http/s basic authentication
username = scale_admin

# Base64 encoded password string used for bridge api http/s basic authentication
# Example string encoding via cli:
#   $ echo "MyVeryStrongPassw0rd!" |base64
#   TXlWZXJ5U3Ryb25nUGFzc3cwcmQhCg==
#
# password = TXlWZXJ5U3Ryb25nUGFzc3cwcmQhCg==
#
# alternatively you can store a Base64 encoded string in a file
# and specify the file location as the basic authentication password, f.e:
#   password = /etc/bridge_auth/basic_scale-21

##################### API SSL OAuth ############################################
[tls]
# Directory path of tls key and cert file location
# tlsKeyPath = /etc/bridge_ssl/certs

# Name of tls private key file
# tlsKeyFile = privkey.pem

# Name of tls certificate file
# tlsCertFile = cert.pem



##################### GPFS Server ###############################################
[server]
# The host name or ip address of the pmcollector node
server = localhost

# The https port to use
serverPort = 9980

# The sleep time in seconds before attempting to get metaData from the server again.
# This most likely the case if the query was sent to server before it did finish the
# initial startup (maximum 3 attempts)
retryDelay = 60

# The name of REST HTTPS API key name
apiKeyName = scale_grafana

# The REST HTTPS API key value, f.e:
#   apiKeyValue = e40960c9-de0a-4c75-bc71-0bcae6db23b2
#
# alternatively you can store a string of 32 hexadecimal digits in a file
# and specify the file location as the REST HTTPS API key value, f.e:
#   apiKeyValue = /etc/bridge_ssl/apikey_scale-21

# False or the path to the CA certificate to use. 
# On many Linux systems, certs can be found in /etc/ssl/certs.
# In CNSA the service-ca certifcate must be used:
# caCertPath = "/etc/ssl/certs/service-ca.crt"
caCertPath = False

##################### GPFS Server data query settings ############################
[query]
# Use or not the historical data from disk (default: no)
includeDiskData = no

##################### Logging ####################################################
[logging]
# Directory where the bridge can store logs
logPath = /var/log/ibm_bridge_for_grafana

# log level 5 (TRACE) 10 (DEBUG), 15 (MOREINFO), 20 (INFO), 30 (WARN), 
# 40 (ERROR) (Default: 15)
logLevel = 15

# Log file name (Default: zserver.log)
# Comment out this setting, if you wish to print out the trace messages directly on the command line
logFile = zserver.log
