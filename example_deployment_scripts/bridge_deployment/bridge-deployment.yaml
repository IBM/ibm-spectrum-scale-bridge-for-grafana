---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-bridge-deployment
  serviceAccount: "ibm-spectrum-scale-core-operator"

spec:
  replicas: 2
  selector:
    matchLabels:
      app: grafana-bridge
  template:
    metadata:
      labels:
        app: grafana-bridge
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - grafana-bridge
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - scale-pmcollector
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values: [ linux ]
      containers:
        - name: grafana-bridge
          image: <bridge image location/bridge image name:tag>
          env:
          - name: SERVER
            value: $(IBM_SPECTRUM_SCALE_PERF_QUERY_SERVICE_HOST)
          - name: TLSKEYPATH
            value: /etc/bridge_ssl/certs
          - name: TLSKEYFILE
            value: "tls.key"
          - name: TLSCERTFILE
            value: "tls.crt"
          - name: PORT
            value: "8443"
          - name: PROTOCOL
            value: "https"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 4242
            - name: https
              containerPort: 8443
          volumeMounts:
            - name: logfiles
              mountPath: /var/log/ibm_bridge_for_grafana/
            - name: config
              mountPath: /opt/IBM/zimon/
              readOnly: true
              optional: true
            - name: secret-volume
              mountPath: /etc/bridge_ssl/certs
              type: DirectoryOrCreate
      initContainers:
      - name: init-scale-perf-query-service
        image: busybox:latest
        command: ['sh', '-c', "until nslookup ibm-spectrum-scale-perf-query.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for ibm-spectrum-scale-perf-query service; sleep 2; done"]
      #######################################################################################################################
      #
      # in case you are pulling the image from a private Docker registry or repository
      # you need to create a Secret based on existing Docker credentials and put the secret name under imagePullSecrets settings
      #
      #######################################################################################################################
      #imagePullSecrets:
      #  - name: spectrumscale-registrykey
      volumes:
        - name: logfiles
          emptyDir: {}
        - name: secret-volume
          secret:
            secretName: grafana-bridge-secret
        - name: config
          projected:
            sources:
            - configMap:
                name: ibm-spectrum-scale-pmsensors-config
                items:
                  - key: "ZIMonSensors.cfg"
                    path: "ZIMonSensors.cfg"
            - configMap:
                name: ibm-spectrum-scale-pmcollector
                items:
                  - key: "ZIMonCollector.cfg"
                    path: "ZIMonCollector.cfg"
